# Importa√ß√£o das Bibliotecas necess√°rias para o projeto.
import json
import urllib
import pandas as pd
from urllib.request import urlopen
import plotly.express as px
import streamlit as st

# Baixa um arquivo JSON (A base de dados) a partir da URL fornecida.
url = "https://raw.githubusercontent.com/guilherme-wagner/python/main/netflix.json"
response = urlopen(url) # Abre a URL e obt√©m a resposta.
data_json = json.loads(response.read()) # Carrega os dados JSON da resposta.
df = pd.DataFrame.from_dict(data_json) # Converte os dados JSON em um Dataframe pandas.
print(df) # Imprime na tela o dataframe.

# Ordenando o Dataframe pelas avalia√ß√µes
df_sorted_by_rating = df.sort_values(by='rating')
print(df_sorted_by_rating)

# Ordeando o Dataframe pelos votos
df_sorted_by_votes = df.sort_values(by='votes', ascending=False)
print(df_sorted_by_votes)

#Gr√°fico das s√©ries mais avaliadas
grafico_mais_avaliadas = px.bar(
df_sorted_by_rating.tail(5),
x = 'lister-item-header',
y = 'rating',
text_auto = True,
title = 'TOP 5 s√©ries + avaliadas',
labels= {'rating': 'Avalia√ß√£o', 'lister-item-header': 'Nome da s√©rie'}
)
grafico_mais_avaliadas.show()

#Gr√°fico das s√©ries menos avaliadas
grafico_menos_avaliadas = px.bar(
  df_sorted_by_rating.head(5),
  x = 'lister-item-header',
  y = 'rating',
  text_auto = True,
  title = 'TOP 5 s√©ries - avaliadas',
  labels= {'rating': 'Avalia√ß√£o da s√©rie', 'lister-item-header': 'Nome da s√©rie'}
)
grafico_menos_avaliadas.show()

#Gr√°fico dos g√™neros mais votados
df_genre_split = df.assign(genre=df['genre'].str.split(', ')).explode('genre')
df_genre_votes = df_genre_split.groupby('genre')['votes'].sum().reset_index()
grafico_generos_votados = px.bar(
    df_genre_votes,
    x='genre',
    y='votes',
    title='Votos por G√™nero',
    labels={'votes': 'Total de Votos', 'genre': 'G√™nero'}
)
grafico_generos_votados.show()

# Criando o Dashboard
netflix_logo_url = "https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png"
stranger_things_image_url = "https://mcdn.wallpapersafari.com/medium/44/66/l5CPZ3.png"

#Ordenando os g√™neros
generos_ordenados = sorted(df['genre'].unique())

#Removendo index
df = df.drop(columns=['lister-item-index'])

st.set_page_config(layout='wide')
st.title("S√©ries üì∫")

aba1, aba2, aba3, aba4, aba5 = st.tabs(['S√©ries', 'Mais Avaliadas', 'Menos Avaliadas', 'G√™nero', 'Recomendado'])

#Logo NetFlix
st.sidebar.image(netflix_logo_url, width=150)

traducao_colunas_dashboard = {
    'lister-item-index': '√çndice do Item',
    'lister-item-header': 'Nome da S√©rie',
    'certificate': 'Classifica√ß√£o',
    'runtime': 'Dura√ß√£o',
    'genre': 'G√™nero',
    'rating': 'Avalia√ß√£o',
    'votes': 'Votos'
}

#Colunas Traduzidas
df_dashboard = df.rename(columns=traducao_colunas_dashboard)

#Filtro por g√™nero
with st.sidebar:
    st.sidebar.write("")
    generos_selecionados = st.sidebar.multiselect('Selecione os g√™neros:', generos_ordenados)

#Definindo DataFrame baseado no filtro de g√™nero
if generos_selecionados:
    df_dashboard = df_dashboard[df_dashboard['G√™nero'].str.lower().isin([genero.lower() for genero in generos_selecionados])]

# Definindo as abas do Dashboard
with aba1:
    st.dataframe(df_dashboard)

with aba2:
    st.plotly_chart(grafico_mais_avaliadas, use_container_width=True)

with aba3:
    st.plotly_chart(grafico_menos_avaliadas, use_container_width=True)

with aba4:
    st.plotly_chart(grafico_generos_votados, use_container_width=True)

with aba5:
    st.image(stranger_things_image_url, width=400)
    st.write("Stranger Things est√° no TOP 5 das s√©ries mais bem avaliadas da Netflix. Uma s√©rie criada pelos irm√£os Duffer onde um grupo de amigos se envolve em uma s√©rie de eventos sobrenaturais na pacata cidade de Hawkins. Eles enfrentam criaturas monstruosas, ag√™ncias secretas do governo e se aventuram em dimens√µes paralelas.")

# Rodap√©
st.markdown("---")
st.markdown("Desenvolvido por: [Guilherme](https://www.linkedin.com/in/guilherme-wagner) e [Cristiano](https://www.linkedin.com/in/cristianolimamachado/) como trabalho ac√¢demico da mat√©ria de Python.")